{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to CSC 3220 Applications Programming Winter 2019! Use the navigation and search features to find necessary information. Times and Locations Meeting Times : Tu/Th 9:30am \u2013 11:00am in Otto Miller Hall (OMH) 244 No Mid-term / Final Exam : Projects will be assigned Also, read the following emergency response information provided by Safety and Security: Emergency Preparedness Information One the most important thing : Call the Office of Safety & Security (OSS) at 206-281-2922 to report an emergency or suspicious activity. Save the number.","title":"Welcome"},{"location":"#times-and-locations","text":"Meeting Times : Tu/Th 9:30am \u2013 11:00am in Otto Miller Hall (OMH) 244 No Mid-term / Final Exam : Projects will be assigned Also, read the following emergency response information provided by Safety and Security: Emergency Preparedness Information One the most important thing : Call the Office of Safety & Security (OSS) at 206-281-2922 to report an emergency or suspicious activity. Save the number.","title":"Times and Locations"},{"location":"classroom/","text":"Classroom Policy Notes Academic Integrity The current edition of the SPU Undergraduate Catalog describes the University\u2019s commitment to academic integrity, which is breached by academic dishonesty of various kinds. Among these is turning in another\u2019s work as your own and committing plagiarism, which is the copying of portions of another\u2019s words from a published or electronic source without acknowledgement of that source. The penalty for a breach of academic integrity is a failing grade for the work in question on the first offense and a failing grade for the course as a whole with repeated offenses. Classroom Environment Mutual respect and consideration for others make for an effective classroom environment. By following a few sensible guidelines, we can make the classroom a more comfortable place for all. Be respectful for each other and the instructor. Please turn off your cell phones at the beginning of class, or set them to silent mode, so you don\u2019t disturb our time together. Do NOT use your computer during the class period for anything that is not class-related; that is rude and disrespectful not just to the instructor but to your classmates as well. Eating and drinking in class Food and drink are prohibited in the classroom to protect the equipment. The only exception will be for water bottles, which are to be kept tightly closed when not being used. Always take care of bathroom visits and other personal needs before class begins. ARRIVE ON TIME. The instructor will make every effort to both start and end class on time. Barring unavoidable emergencies, it is expected that students will be in the classroom and ready to go right on time. If you know ahead of time that you need to leave class early, please let the instructor know and sit near the door so as to cause minimal distraction. SPU Closure SPU is closed Monday, January 14 (Martin Luther King Day) and Monday, February 18 (Presidents Day). These closures will not affect this class. Inclement Weather Inclement weather or an emergency may on occasion affect SPU\u2019s schedule. In some cases, classes and campus offices may shut-down entirely; in others there may be a late start or an early closure of the campus. Two campus contacts will always carry the most up-to-date information on the campus schedule: the Emergency Closure Hotline (206-281-2800) and the SPU Home Page. Since weather in the Seattle area can change rapidly, check these sites often for updates. If SPU is open but you are unable to travel to campus due to inclement weather, please let your instructor know as soon as possible. Finally, be sure to check your email for any messages from your instructor regarding class activities. Emergency procedure Note the emergency procedures posted in the classroom (and attached to this syllabus), and our emergency exits. In case of an emergency (fire, earthquake, hazardous material spillage, bomb threat, etc.), the class will evacuate the building and gather in the Alumni parking lot to the south of OMH (or, depending on the emergency, immediately go into lockdown). If evacuating, please stay together as you exit, and be sure to check in with your instructor once you reach the gathering place. Also keep your eyes open for classmates. The \"buddy system\" one learns in elementary school still applies in times of emergency! Disability statement In accordance with Section 504 of the Rehabilitation Act of 1973 and the Americans with Disabilities Act of 1990, students with specific disabilities that qualify for academic accommodations should contact Disabled Student Services (DSS) in the Center for Learning. DSS in turn will send a Disability Verification Letter to the course instructor indicating what accommodations have been approved. Course Evaluation You are expected to participate in an online evaluation of this course and its instructor in a thoughtful and constructive manner. The evaluation data is used to make improvements in the course, and your feedback is considered when selecting textbooks, designing teaching methods and preparing assignments. Courses are evaluated using the Banner Course Evaluation System. All answers are completely confidential - your name is not stored with your answers in any way. Also, DO NOT send the instructor an \"I filled out the evaluation\" email, as this can endanger your anonymity. Both positive comments and suggestions for improvement are helpful. I will not see any results of the evaluation until after final grades are submitted to the University.","title":"Classroom Policy Notes"},{"location":"classroom/#classroom-policy-notes","text":"Academic Integrity The current edition of the SPU Undergraduate Catalog describes the University\u2019s commitment to academic integrity, which is breached by academic dishonesty of various kinds. Among these is turning in another\u2019s work as your own and committing plagiarism, which is the copying of portions of another\u2019s words from a published or electronic source without acknowledgement of that source. The penalty for a breach of academic integrity is a failing grade for the work in question on the first offense and a failing grade for the course as a whole with repeated offenses. Classroom Environment Mutual respect and consideration for others make for an effective classroom environment. By following a few sensible guidelines, we can make the classroom a more comfortable place for all. Be respectful for each other and the instructor. Please turn off your cell phones at the beginning of class, or set them to silent mode, so you don\u2019t disturb our time together. Do NOT use your computer during the class period for anything that is not class-related; that is rude and disrespectful not just to the instructor but to your classmates as well. Eating and drinking in class Food and drink are prohibited in the classroom to protect the equipment. The only exception will be for water bottles, which are to be kept tightly closed when not being used. Always take care of bathroom visits and other personal needs before class begins. ARRIVE ON TIME. The instructor will make every effort to both start and end class on time. Barring unavoidable emergencies, it is expected that students will be in the classroom and ready to go right on time. If you know ahead of time that you need to leave class early, please let the instructor know and sit near the door so as to cause minimal distraction. SPU Closure SPU is closed Monday, January 14 (Martin Luther King Day) and Monday, February 18 (Presidents Day). These closures will not affect this class. Inclement Weather Inclement weather or an emergency may on occasion affect SPU\u2019s schedule. In some cases, classes and campus offices may shut-down entirely; in others there may be a late start or an early closure of the campus. Two campus contacts will always carry the most up-to-date information on the campus schedule: the Emergency Closure Hotline (206-281-2800) and the SPU Home Page. Since weather in the Seattle area can change rapidly, check these sites often for updates. If SPU is open but you are unable to travel to campus due to inclement weather, please let your instructor know as soon as possible. Finally, be sure to check your email for any messages from your instructor regarding class activities. Emergency procedure Note the emergency procedures posted in the classroom (and attached to this syllabus), and our emergency exits. In case of an emergency (fire, earthquake, hazardous material spillage, bomb threat, etc.), the class will evacuate the building and gather in the Alumni parking lot to the south of OMH (or, depending on the emergency, immediately go into lockdown). If evacuating, please stay together as you exit, and be sure to check in with your instructor once you reach the gathering place. Also keep your eyes open for classmates. The \"buddy system\" one learns in elementary school still applies in times of emergency! Disability statement In accordance with Section 504 of the Rehabilitation Act of 1973 and the Americans with Disabilities Act of 1990, students with specific disabilities that qualify for academic accommodations should contact Disabled Student Services (DSS) in the Center for Learning. DSS in turn will send a Disability Verification Letter to the course instructor indicating what accommodations have been approved. Course Evaluation You are expected to participate in an online evaluation of this course and its instructor in a thoughtful and constructive manner. The evaluation data is used to make improvements in the course, and your feedback is considered when selecting textbooks, designing teaching methods and preparing assignments. Courses are evaluated using the Banner Course Evaluation System. All answers are completely confidential - your name is not stored with your answers in any way. Also, DO NOT send the instructor an \"I filled out the evaluation\" email, as this can endanger your anonymity. Both positive comments and suggestions for improvement are helpful. I will not see any results of the evaluation until after final grades are submitted to the University.","title":"Classroom Policy Notes"},{"location":"contact/","text":"Instructor Information Instructor : Dr. Taiwoo Park Office : OMH 244 Class Announcements The primary medium of announcements will be Canvas . Some time-critical announcements can be cross-posted on Slack or via e-mail. Make sure to subscribe canvas updates and check the canvas page in a regular basis. Contact Method #1: Slack Messenger This is the best and fastest way to reach out to me and get class community support. Use this Signup link and type your @spu.edu email: sputwp.slack.com/signup Use of mobile/desktop apps is strongly recommended. Search in app/play store or get more information at slack.com/downloads . Once you sign-up, you can use sputwp.slack.com to open the slack channel. Contact Method #2: Open Office Hours Monday: 11:30am-2pm Tuesday: 9-11am, 3-5pm Wednesday: 11:30am-2pm Thursday: Closed Friday: 11:30am-2pm You can stop by during these times to ask question without appointment. To schedule an appointments outside of O-OH, PM me on Slack. Other contact methods Snail e-mail : twp@spu.edu Emergency Office Phone : 206-286-7258 Canvas mail/message","title":"Instructor Information and Contact"},{"location":"contact/#instructor-information","text":"Instructor : Dr. Taiwoo Park Office : OMH 244","title":"Instructor Information"},{"location":"contact/#class-announcements","text":"The primary medium of announcements will be Canvas . Some time-critical announcements can be cross-posted on Slack or via e-mail. Make sure to subscribe canvas updates and check the canvas page in a regular basis.","title":"Class Announcements"},{"location":"contact/#contact-method-1-slack-messenger","text":"This is the best and fastest way to reach out to me and get class community support. Use this Signup link and type your @spu.edu email: sputwp.slack.com/signup Use of mobile/desktop apps is strongly recommended. Search in app/play store or get more information at slack.com/downloads . Once you sign-up, you can use sputwp.slack.com to open the slack channel.","title":"Contact Method #1: Slack Messenger"},{"location":"contact/#contact-method-2-open-office-hours","text":"Monday: 11:30am-2pm Tuesday: 9-11am, 3-5pm Wednesday: 11:30am-2pm Thursday: Closed Friday: 11:30am-2pm You can stop by during these times to ask question without appointment. To schedule an appointments outside of O-OH, PM me on Slack.","title":"Contact Method #2: Open Office Hours"},{"location":"contact/#other-contact-methods","text":"Snail e-mail : twp@spu.edu Emergency Office Phone : 206-286-7258 Canvas mail/message","title":"Other contact methods"},{"location":"grading/","text":"Assignment Policies One learns to program by programming. That is why programming assignments are a significant portion of your grade in this class. We can discuss ideas, demonstrate how things work and, occasionally, try things out in class, but most of the actual \"learning\" and skill-building, especially when it comes to coding, will occur outside of class as you apply these concepts to assigned problems. Submission and Late Policy The following procedures apply to all assignments (unless specifically directed otherwise). All assignments must be submitted via Canvas to be accepted . Each assignment will have a specified due date. Emailed assignments are not accepted. Assignments not turned in when they are due are considered late. Late assignments will receive a penalty depending on the number of days delayed: -10% for less than 1 day -20% for less than 2 days -30% for less than 3 days -40% for less than 1 week -50% for more than 1 week Late submissions will NOT be accepted after Friday, March 15. Technical Challenge and Late Submission Friendly Reminder: BE SURE TO ALWAYS BACK-UP YOUR WORK and store incremental copies in multiple places. Flash drives and personal laptops only fail just prior to the due date of programming assignments (or so it seems). The instructor is very unlikely to perceive a storage or system crash as adequate grounds for allowing an extension of a due date! HCI Principles Project (Midterm/Final) As you read the Spolsky text, you will be asked to describe, discuss, and/or create or copy examples of a number of HCI principles. Your collection of descriptions and samples will be handed in twice during the quarter. This will also be submitted via Canvas. Part 1 \u2013 Friday, February 8 (10 pm) Part 2 \u2013 Friday, March 15 (10 pm) * Late submissions will NOT be accepted after Friday, March 15. General Assignment Policy All works are individual : Unless otherwise noted, all work is to be done on an individual basis . At the same time, it is understood that learning from your peers is valid and you are encouraged to talk among yourselves about programming in general and current assignments in particular. Keep in mind, however, that each individual student must do the work in order to learn. Hence, the following guidelines are established: Feel free to discuss any and all programming assignments. Discussion on Slack in the class channel is encouraged, to share common pattern of troubleshooting experiences and to benefit from each other. However, DO NOT allow other students to copy your code. Given that said, DO NOT give any student an electronic or printed copy of any program you write for this class. Gaining the ability to properly analyze common programming errors is an important experience. Do not deprive (too early) a fellow student of his/her opportunity to practice problem solving: control the urge to show them what to do by writing the code for them. If you don't know how to do it wisely, ask the instructor or lab tutors to do it. If you\u2019ve given the assignment a fair effort and still need help, see the lab tutors or instructor. DOUBLE ZERO for plagiarism : If there is any evidence that a program or other written assignment was copied from another student, both students will earn 'double zero' credit for the assignment. That is, zero for the given assignment and another deduction of full credit amount of that assignment. Following the university policy, the act will be automatically reported to department and dean's office. Protect yourself: Handle throw-away program listings carefully. Grading policy Grades will be based on performance in three areas: Area Portion C# Programming (labs, homework) 55% HCI Principles Project 30% Attendance, participation, in-class activities, quizzes 15% The grading scale is: Range Grade Mark 90% and above A, A- 80% - 89% B+, B, B- 70% - 79% C+, C, C- 60% - 69% D Below 60% E","title":"Assignment and Grading Policies"},{"location":"grading/#assignment-policies","text":"One learns to program by programming. That is why programming assignments are a significant portion of your grade in this class. We can discuss ideas, demonstrate how things work and, occasionally, try things out in class, but most of the actual \"learning\" and skill-building, especially when it comes to coding, will occur outside of class as you apply these concepts to assigned problems.","title":"Assignment Policies"},{"location":"grading/#submission-and-late-policy","text":"The following procedures apply to all assignments (unless specifically directed otherwise). All assignments must be submitted via Canvas to be accepted . Each assignment will have a specified due date. Emailed assignments are not accepted. Assignments not turned in when they are due are considered late. Late assignments will receive a penalty depending on the number of days delayed: -10% for less than 1 day -20% for less than 2 days -30% for less than 3 days -40% for less than 1 week -50% for more than 1 week Late submissions will NOT be accepted after Friday, March 15.","title":"Submission and Late Policy"},{"location":"grading/#technical-challenge-and-late-submission","text":"Friendly Reminder: BE SURE TO ALWAYS BACK-UP YOUR WORK and store incremental copies in multiple places. Flash drives and personal laptops only fail just prior to the due date of programming assignments (or so it seems). The instructor is very unlikely to perceive a storage or system crash as adequate grounds for allowing an extension of a due date!","title":"Technical Challenge and Late Submission"},{"location":"grading/#hci-principles-project-midtermfinal","text":"As you read the Spolsky text, you will be asked to describe, discuss, and/or create or copy examples of a number of HCI principles. Your collection of descriptions and samples will be handed in twice during the quarter. This will also be submitted via Canvas. Part 1 \u2013 Friday, February 8 (10 pm) Part 2 \u2013 Friday, March 15 (10 pm) * Late submissions will NOT be accepted after Friday, March 15.","title":"HCI Principles Project (Midterm/Final)"},{"location":"grading/#general-assignment-policy","text":"All works are individual : Unless otherwise noted, all work is to be done on an individual basis . At the same time, it is understood that learning from your peers is valid and you are encouraged to talk among yourselves about programming in general and current assignments in particular. Keep in mind, however, that each individual student must do the work in order to learn. Hence, the following guidelines are established: Feel free to discuss any and all programming assignments. Discussion on Slack in the class channel is encouraged, to share common pattern of troubleshooting experiences and to benefit from each other. However, DO NOT allow other students to copy your code. Given that said, DO NOT give any student an electronic or printed copy of any program you write for this class. Gaining the ability to properly analyze common programming errors is an important experience. Do not deprive (too early) a fellow student of his/her opportunity to practice problem solving: control the urge to show them what to do by writing the code for them. If you don't know how to do it wisely, ask the instructor or lab tutors to do it. If you\u2019ve given the assignment a fair effort and still need help, see the lab tutors or instructor. DOUBLE ZERO for plagiarism : If there is any evidence that a program or other written assignment was copied from another student, both students will earn 'double zero' credit for the assignment. That is, zero for the given assignment and another deduction of full credit amount of that assignment. Following the university policy, the act will be automatically reported to department and dean's office. Protect yourself: Handle throw-away program listings carefully.","title":"General Assignment Policy"},{"location":"grading/#grading-policy","text":"Grades will be based on performance in three areas: Area Portion C# Programming (labs, homework) 55% HCI Principles Project 30% Attendance, participation, in-class activities, quizzes 15% The grading scale is: Range Grade Mark 90% and above A, A- 80% - 89% B+, B, B- 70% - 79% C+, C, C- 60% - 69% D Below 60% E","title":"Grading policy"},{"location":"outcomes/","text":"Computer Science and Information Systems Program Learning Outcomes Computer Science faculty have identified twelve primary Program Learning Outcomes for students in our majors. Each of the courses in our curriculum is designed to help students achieve specific learning objectives that will help them progress towards the goal of becoming competent, responsible and effective computing professionals. As noted below, several of these learning objectives are particularly relevant to your studies in this class: Relevant? # Objective Description * 1 Attainment of problem-solving skills, especially those required to analyze, design and implement solutions involving the use of a computer * 2 Ability to program computers in a current programming language using modern software and hardware engineering tools 3 Understanding of modern computing systems and the theoretical aspects of computer science 4 Demonstration of the necessary math and science skills to solve computing problems 5 Responsibility in meeting professional commitments * 6 Ability to manage projects within multiple constraints and to meet multiple goals 7 Ability to successfully lead and work in teams with diverse membership 8 Effective oral and written communication of technical information using a variety of techniques * 9 Awareness of the ethical and social impacts of technology, and the ability to take responsible action 10 Articulation of Christian perspectives on personal, societal, technical, or theological issues * 11 Preparation for continued learning in a rapidly changing discipline 12 Ability to locate, analyze and apply information on current events and new technologies obtained from a wide variety of sources and experiences","title":"CS/IS Learning Outcomes"},{"location":"outcomes/#computer-science-and-information-systems-program-learning-outcomes","text":"Computer Science faculty have identified twelve primary Program Learning Outcomes for students in our majors. Each of the courses in our curriculum is designed to help students achieve specific learning objectives that will help them progress towards the goal of becoming competent, responsible and effective computing professionals. As noted below, several of these learning objectives are particularly relevant to your studies in this class: Relevant? # Objective Description * 1 Attainment of problem-solving skills, especially those required to analyze, design and implement solutions involving the use of a computer * 2 Ability to program computers in a current programming language using modern software and hardware engineering tools 3 Understanding of modern computing systems and the theoretical aspects of computer science 4 Demonstration of the necessary math and science skills to solve computing problems 5 Responsibility in meeting professional commitments * 6 Ability to manage projects within multiple constraints and to meet multiple goals 7 Ability to successfully lead and work in teams with diverse membership 8 Effective oral and written communication of technical information using a variety of techniques * 9 Awareness of the ethical and social impacts of technology, and the ability to take responsible action 10 Articulation of Christian perspectives on personal, societal, technical, or theological issues * 11 Preparation for continued learning in a rapidly changing discipline 12 Ability to locate, analyze and apply information on current events and new technologies obtained from a wide variety of sources and experiences","title":"Computer Science and Information Systems Program Learning Outcomes"},{"location":"overview/","text":"SPU Mission Statement Seattle Pacific University seeks to be a premier Christian university fully committed to engaging the culture and changing the world by graduating people of competence and character, becoming people of wisdom, and modeling grace-filled community. ECS Department Mission Statement Our mission is to equip students with theoretical knowledge and applied skills to create and utilize appropriate solutions in Engineering and Computing disciplines. Within a supportive Christian community, we prepare our students to become responsible and effective servant-leaders. Course Description and Learning Objectives Prerequisite: CSC 2430 Data Structures I An implementation-oriented look at software development techniques used to create interactive applications, focusing on the use of object-oriented libraries to create user interfaces. Topics include event-driven programming, human-computer interaction (HCI), graphical user interfaces (GUI), database interfaces, and tools for interface prototyping. How does this class help prepare you for future success in the computing sciences? \"Human-computer interaction (HCI) is concerned with designing interactions between human activities and the computational systems that support them, and with constructing interfaces to afford those interactions.\" 1 One approach for creating systems that support human-centered interaction to design and implement graphical user interface (GUI) applications. This course focuses on the HCI principles related to creating event-driven, GUI applications and the use of a GUI library of tools to aid user interaction. Students successfully completing this course will be able to: Programming Fundamentals \u2013 Event-driven programming Describe the difference between event-driven and command-line (console application) programming Design, code, test and debug programs that respond to user events Develop code that includes input validation and responds to exception conditions raised during execution Human-Computer Interaction (HCI) Discuss why human-centered software development is important Develop and use a common vocabulary for analyzing human interaction with software: affordance, conceptual model, consistency, metaphors, and so forth Describe measures for evaluation of user interfaces, for example utility, efficiency, learnability, user satisfaction Articulate social issues influencing HCI design and use: culture, communication, and organizations Summarize common interaction styles Explain and use GUI programming concepts such as event handling, layout management, and the use of color Design a Graphical User Interface (GUI) Based on a set of well-defined user interface standards Accommodating human diversity, including universal design and accessibility and designing for multiple cultural and linguistic contexts That guards against the most common user mistakes Build a Graphical User Interface (GUI) Identify several fundamental principles for effective GUI design Use a GUI toolkit (C# and Visual Studio) to create small GUI-based applications Illustrate the effect of fundamental design principles on the structure of a GUI Illustrate the effect of \"programming for humans\" on the controls and layout of a GUI Use a graphics API and RGB color in user interface development Software Engineering Application Programming Interfaces (APIs) Explain the value of APIs in software development. Use class browsers and related tools during the development of applications using APIs. Design, implement, test and debug programs that use an API package. Software verification: Apply HCI and black-box testing techniques Computer Science Curricula 2013 : Curriculum guidelines for Undergraduate Degree Programs in computer Science: page 89 \u21a9","title":"Overview"},{"location":"overview/#spu-mission-statement","text":"Seattle Pacific University seeks to be a premier Christian university fully committed to engaging the culture and changing the world by graduating people of competence and character, becoming people of wisdom, and modeling grace-filled community.","title":"SPU Mission Statement"},{"location":"overview/#ecs-department-mission-statement","text":"Our mission is to equip students with theoretical knowledge and applied skills to create and utilize appropriate solutions in Engineering and Computing disciplines. Within a supportive Christian community, we prepare our students to become responsible and effective servant-leaders.","title":"ECS Department Mission Statement"},{"location":"overview/#course-description-and-learning-objectives","text":"Prerequisite: CSC 2430 Data Structures I An implementation-oriented look at software development techniques used to create interactive applications, focusing on the use of object-oriented libraries to create user interfaces. Topics include event-driven programming, human-computer interaction (HCI), graphical user interfaces (GUI), database interfaces, and tools for interface prototyping.","title":"Course Description and Learning Objectives"},{"location":"overview/#how-does-this-class-help-prepare-you-for-future-success-in-the-computing-sciences","text":"\"Human-computer interaction (HCI) is concerned with designing interactions between human activities and the computational systems that support them, and with constructing interfaces to afford those interactions.\" 1 One approach for creating systems that support human-centered interaction to design and implement graphical user interface (GUI) applications. This course focuses on the HCI principles related to creating event-driven, GUI applications and the use of a GUI library of tools to aid user interaction.","title":"How does this class help prepare you for future success in the computing sciences?"},{"location":"overview/#students-successfully-completing-this-course-will-be-able-to","text":"Programming Fundamentals \u2013 Event-driven programming Describe the difference between event-driven and command-line (console application) programming Design, code, test and debug programs that respond to user events Develop code that includes input validation and responds to exception conditions raised during execution Human-Computer Interaction (HCI) Discuss why human-centered software development is important Develop and use a common vocabulary for analyzing human interaction with software: affordance, conceptual model, consistency, metaphors, and so forth Describe measures for evaluation of user interfaces, for example utility, efficiency, learnability, user satisfaction Articulate social issues influencing HCI design and use: culture, communication, and organizations Summarize common interaction styles Explain and use GUI programming concepts such as event handling, layout management, and the use of color Design a Graphical User Interface (GUI) Based on a set of well-defined user interface standards Accommodating human diversity, including universal design and accessibility and designing for multiple cultural and linguistic contexts That guards against the most common user mistakes Build a Graphical User Interface (GUI) Identify several fundamental principles for effective GUI design Use a GUI toolkit (C# and Visual Studio) to create small GUI-based applications Illustrate the effect of fundamental design principles on the structure of a GUI Illustrate the effect of \"programming for humans\" on the controls and layout of a GUI Use a graphics API and RGB color in user interface development Software Engineering Application Programming Interfaces (APIs) Explain the value of APIs in software development. Use class browsers and related tools during the development of applications using APIs. Design, implement, test and debug programs that use an API package. Software verification: Apply HCI and black-box testing techniques Computer Science Curricula 2013 : Curriculum guidelines for Undergraduate Degree Programs in computer Science: page 89 \u21a9","title":"Students successfully completing this course will be able to:"},{"location":"textbook/","text":"ALWAYS HAVE YOUR TEXTBOOK AND FLASH DRIVE OR LAPTOP READY FOR CLASS. Required Texts Free User Interface Design for Programmers by Joel Spolsky, \u00a9 2001 Available online, links/pdf provided via Canvas. Free Qt Tutorial and Documentation Available online, links provided via Canvas. Software This class will be using Qt (C++ binding) for GUI framework and Qt Creator for its default IDE. If you wish this for your personal laptop, and don't already have it installed, you can obtain it for free (under LGPL License) from Qt homepage. Instructions for downloading and installing the software will be available via Canvas. Computers Programming assignments may be written and run on the Windows PCs in the Otto Miller Hall Open Computer Lab (OMH 253), in the SPU Library or on your own computer. This class does not officially support MacOS/Linux, however, there are resources how to install Qt/Qt Creator on these operating systems online. Google it. Storage Media or Source Repo If you do not already have a USB flash drive for storing and backing up personal files, invest in one! USB flash drives are available for purchase all over these days, and you can get a lot of storage for pretty reasonable prices! Otherwise, you may want to learn how to use online/local source code repository toolkits (e.g., git) and keep your codes backed up.","title":"Textbook, Media, Resources"},{"location":"textbook/#required-texts","text":"Free User Interface Design for Programmers by Joel Spolsky, \u00a9 2001 Available online, links/pdf provided via Canvas. Free Qt Tutorial and Documentation Available online, links provided via Canvas.","title":"Required Texts"},{"location":"textbook/#software","text":"This class will be using Qt (C++ binding) for GUI framework and Qt Creator for its default IDE. If you wish this for your personal laptop, and don't already have it installed, you can obtain it for free (under LGPL License) from Qt homepage. Instructions for downloading and installing the software will be available via Canvas.","title":"Software"},{"location":"textbook/#computers","text":"Programming assignments may be written and run on the Windows PCs in the Otto Miller Hall Open Computer Lab (OMH 253), in the SPU Library or on your own computer. This class does not officially support MacOS/Linux, however, there are resources how to install Qt/Qt Creator on these operating systems online. Google it.","title":"Computers"},{"location":"textbook/#storage-media-or-source-repo","text":"If you do not already have a USB flash drive for storing and backing up personal files, invest in one! USB flash drives are available for purchase all over these days, and you can get a lot of storage for pretty reasonable prices! Otherwise, you may want to learn how to use online/local source code repository toolkits (e.g., git) and keep your codes backed up.","title":"Storage Media or Source Repo"}]}